paths:
  /api/carts/:
    post:
      summary: Create Cart
      tags:
        - Carts
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              example:
                {
                  "products": [
                    {
                      "id": "643c0c7701d8fb15b03506ff",
                      "quantity": 1
                    }
                  ]
                }
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "msg": "Carrito de compra creado",
                  "result": {
                    "id": "64c3307aeefd1ce9078174e8",
                    "products": [
                      {
                        "id": "64c3307aeefd1ce9078174e9",
                        "quantity": 1
                      }
                    ]
                  }
                }
        "500":
          description: Internal Error Server

  /api/carts/{uid}:
    get:
      summary: Get Cart by Id
      tags:
        - Carts
      parameters:
        - name: id
          in: path
          required: true
          description: Id to find
          schema:
            $type: ObjectId
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "id": "64c3307aeefd1ce9078174e8",
                  "products": [
                    {
                      "id": "643c0c7701d8fb15b03506ff",
                      "title": "producto prueba",
                      "description": "Este es un producto prueba",
                      "code": "tsaat",
                      "price": 50,
                      "status": true,
                      "stock": 1,
                      "category": "productos",
                      "thumbnail": [
                        "path1",
                        "path",
                        "path3"
                      ]
                    }
                  ]
                }
        "400":
          description: "Bad Request"
          content:
            application/json:
              example:
                {
                  "errors": [
                    {
                      "value": "643c0c7701d8fb15b03506ffa",
                      "msg": "No es un id valido",
                      "param": "pid",
                      "location": "params"
                    }
                  ]
                }
        "404":
          description: "Not Found"
          content:
            application/json:
              example:
                {
                  "error": "El carrito de compra con el id 64accd743160ce667aa70c1b no existe"
                }
        "500":
          description: Internal Error Server

    put:
      summary: Updated Cart By Id
      tags:
        - Carts
      parameters:
        - name: id
          in: path
          required: true
          description: Id to delete
          schema:
            $type: ObjectId
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              example:
                {
                  "products": [
                    {
                      "id": "644ab97a97f88b1c6448a044",
                      "quantity": 1
                    },
                    {
                      "id": "643c0c0801d8fb15b03506fa",
                      "quantity": 120
                    }
                  ]
                }
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "id": "64c3307aeefd1ce9078174e8"
                }
        "400":
          description: "Bad Request"
          content:
            application/json:
              example:
                {
                  "errors": [
                    {
                      "value": "643c0c7701d8fb15b03506ffa",
                      "msg": "No es un id valido",
                      "param": "pid",
                      "location": "params"
                    }
                  ]
                }
        "403":
          description: "Forbidden"
          content:
            application/json:
              example:
                {
                  "error": "Authentication error"
                }
        "404":
          description: "Not Found"
          content:
            application/json:
              example:
                {
                  "error": "El producto con el id 645ee28b63c3491089e690c7 no existe o se encuentra eliminado"
                }
        "500":
          description: Internal Error Server
          content:
            application/json:
              example:
                {
                  "error": "Cannot destructure property 'id' of '(intermediate value)' as it is null."
                }

    delete:
      summary: Delete Cart By Id
      tags:
        - Carts
      parameters:
        - name: id
          in: path
          required: true
          description: Id to delete
          schema:
            $type: ObjectId
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "id": "64c3307aeefd1ce9078174e8"
                }
        "400":
          description: "Bad Request"
          content:
            application/json:
              example:
                {
                  "errors": [
                    {
                      "value": "643c0c7701d8fb15b03506ffa",
                      "msg": "No es un id valido",
                      "param": "pid",
                      "location": "params"
                    }
                  ]
                }
        "403":
          description: "Forbidden"
          content:
            application/json:
              example:
                {
                  "error": "Authentication error"
                }
        "404":
          description: "Not Found"
          content:
            application/json:
              example:
                {
                  "error": "El producto con el id 645ee28b63c3491089e690c7 no existe o se encuentra eliminado"
                }
        "500":
          description: Internal Error Server
          content:
            application/json:
              example:
                {
                  "error": "Cannot destructure property 'id' of '(intermediate value)' as it is null."
                }

  /api/carts/{uid}/product/{uid}:
    post:
      summary: Add Product in Cart
      tags:
        - Carts
      parameters:
        - name: id cart
          in: path
          required: true
          description: Cart Id
          schema:
            $type: ObjectId
        - name: id product
          in: path
          required: true
          description: Product Id
          schema:
            $type: ObjectId
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "id": "64599c00ceedae0798357817",
                  "products": [
                    {
                      "id": "643c0c7701d8fb15b03506ff",
                      "quantity": 1
                    },
                    {
                      "id": "644ab97197f88b1c6448a040",
                      "quantity": 10
                    },
                    {
                      "id": "644ab97a97f88b1c6448a044",
                      "quantity": 2
                    },
                    {
                      "id": "64718476791b1b7d005275a6"
                    }
                  ]
                }
        "400":
          description: "Bad Request"
          content:
            application/json:
              example:
                {
                  "errors": [
                    {
                      "value": "643c0c7701d8fb15b03506ffa",
                      "msg": "No es un id valido",
                      "param": "pid",
                      "location": "params"
                    }
                  ]
                }
        "500":
          description: Internal Error Server
    put:
      summary: Updated Product in cart
      tags:
        - Carts
      parameters:
        - name: id cart
          in: path
          required: true
          description: Cart Id
          schema:
            $type: ObjectId
        - name: id product
          in: path
          required: true
          description: Product Id
          schema:
            $type: ObjectId
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              example:
                {
                  "quantity": 1
                }
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "id": "64c40f8b80596c3222576e3e",
                  "products": [
                    {
                      "id": "643c0c7701d8fb15b03506ff",
                      "quantity": 1
                    }
                  ]
                }
        "400":
          description: "Bad Request"
          content:
            application/json:
              example:
                {
                  "errors": [
                    {
                      "value": "643c0c7701d8fb15b03506ffa",
                      "msg": "No es un id valido",
                      "param": "pid",
                      "location": "params"
                    }
                  ]
                }
        "500":
          description: Internal Error Server
    delete:
      summary: Delete Product in cart
      tags:
        - Carts
      parameters:
        - name: id cart
          in: path
          required: true
          description: Cart Id
          schema:
            $type: ObjectId
        - name: id product
          in: path
          required: true
          description: Product Id
          schema:
            $type: ObjectId
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "id": "64c40dd999ea680cf139ad62",
                  "products": [
                    {
                      "id": "643c0c7701d8fb15b03506ff"
                    }
                  ]
                }
        "400":
          description: "Bad Request"
          content:
            application/json:
              example:
                {
                  "errors": [
                    {
                      "value": "643c0c7701d8fb15b03506ffa",
                      "msg": "No es un id valido",
                      "param": "pid",
                      "location": "params"
                    }
                  ]
                }
        "500":
          description: Internal Error Server

components:
  schemas:
    Carts:
      type: object
      properties:
        id:
          type: ObjectId
        products:
          type: array
          items:
            $ref: '#/components/schemas/Products'
paths:
  /api/products/:
    get:
      summary: Get All Products
      tags:
        - Products
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/Products'
              example:
                {
                  "status": "success",
                  "products": [
                    {
                      "id": "643c0c7701d8fb15b03506ff",
                      "title": "producto prueba modificado",
                      "description": "Este es un producto prueba",
                      "code": "abc15",
                      "price": 200,
                      "status": true,
                      "stock": 25,
                      "category": "categoria1",
                      "thumbnail": [
                        "path1",
                        "2",
                        "path2"
                      ]
                    }
                  ],
                  "totalDocs": 8,
                  "limit": 10,
                  "totalPages": 1,
                  "page": 1,
                  "pagingCounter": 1,
                  "hasPrevPage": false,
                  "hasNextPage": false,
                  "prevPage": null,
                  "nextPage": null
                }
        "500":
          description: Internal Error Server
    post:
      summary: Create Product
      tags:
        - Products
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/Products'
              example:
                {
                  "msg": "Producto creado",
                  "result": {
                    "id": "64c30da260cd8ee2765ab03a",
                    "title": "producto prueba",
                    "description": "Este es un producto prueba",
                    "code": "aaa1",
                    "price": 50,
                    "status": true,
                    "stock": 10,
                    "category": "productos",
                    "thumbnail": [
                      "path1",
                      "path",
                      "path3"
                    ]
                  }
                }
        "500":
          description: Internal Error Server
          content:
            application/json:
              example:
                {
                  "error": "El codigo ingresado ya esta siendo utilizado por otro producto"
                }

  /api/products/{uid}:
    get:
      summary: Get Product By Id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Id to find
          schema:
            $type: ObjectId
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "products": {
                    "id": "643c0c7701d8fb15b03506ff",
                    "title": "producto prueba modificado",
                    "description": "Este es un producto prueba",
                    "code": "abc15",
                    "price": 200,
                    "status": true,
                    "stock": 25,
                    "category": "categoria1",
                    "thumbnail": [
                      "path1",
                      "2",
                      "path2"
                    ]
                  }
                }
        "404":
          description: "Not Found"
          content:
            application/json:
              example:
                {
                  "error": "El producto con el id 645ee28b63c3491089e690c7 no existe o se encuentra eliminado"
                }
        "500":
          description: Internal Error Server
    delete:
      summary: Delete Product By Id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Id to delete
          schema:
            $type: ObjectId
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "msg": "Producto eliminado",
                  "result": {
                    "id": "64718457791b1b7d00527584",
                    "title": "producto prueba",
                    "description": "Este es un producto prueba",
                    "code": "aaa",
                    "price": 50,
                    "status": false,
                    "stock": 10,
                    "category": "productos",
                    "thumbnail": [
                      "path1",
                      "path",
                      "path3"
                    ]
                  }
                }
        "403":
          description: "Forbidden"
          content:
            application/json:
              example:
                {
                  "error": "Authentication error"
                }
        "404":
          description: "Not Found"
          content:
            application/json:
              example:
                {
                  "error": "El producto con el id 645ee28b63c3491089e690c7 no existe o se encuentra eliminado"
                }
        "500":
          description: Internal Error Server
    put:
      summary: Updated Product By Id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Id to updated
          schema:
            $type: ObjectId
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              example:
                {
                  "msg": "Producto actualizado",
                  "result": {
                    "id": "643c0c7701d8fb15b03506ff",
                    "title": "producto prueba",
                    "description": "Este es un producto prueba",
                    "code": "tsaat",
                    "price": 50,
                    "status": true,
                    "stock": 1,
                    "category": "productos",
                    "thumbnail": [
                      "path1",
                      "path",
                      "path3"
                    ]
                  }
                }
        "500":
          description: Internal Error Server
          content:
            application/json:
              example:
                [
                  { "error": "El codigo ingresado ya esta siendo utilizado por otro producto" },
                  { "error": "El producto con el id 645ee28b63c3491089e690c7 no existe o se encuentra eliminado" }
                ]

components:
  schemas:
    Products:
      type: object
      properties:
        title:
          type: String
          required: true
        description:
          type: String
          required: true
        code:
          type: String
          required: true
          unique: true
        price:
          type: Number
          required: true
        status:
          type: Boolean
          default: true
        stock:
          type: Number
          required: true
        category:
          type: String
          required: true
        thumbnail:
          type: array
          items:
            type: String